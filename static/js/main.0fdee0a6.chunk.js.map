{"version":3,"sources":["utils.ts","Viz.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mean","sd","verticalLineData","x","minY","maxY","y","Viz","className","breaks","pdfData","title","range","Math","max","map","d","theme","VictoryTheme","material","padding","top","bottom","text","style","grid","stroke","data","b","opacity","r","pNorm","jstat","normal","pdf","n","Array","from","sample","rNorm","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fdee0a6.chunk.js","sourcesContent":["import jstat from \"jstat\";\n\nexport interface Datum {\n    x: number;\n    y: number;\n}\n\nexport const pNorm = (x: number, mean: number, sd: number): number => {\n    return jstat.normal.pdf(x, mean, sd);\n};\n\nexport const rNorm = (n: number, mean: number, sd: number): number[] => {\n    return Array.from(Array(n)).map(() => jstat.normal.sample(mean, sd));\n};\n\nexport const pdf = (n: number, mean: number, sd: number): Datum[] => {\n    return rNorm(n, mean, sd).map((x) => ({ x, y: pNorm(x, mean, sd) }));\n};","import React from \"react\";\nimport {\n  VictoryAxis,\n  VictoryChart,\n  VictoryLabel,\n  VictoryLine,\n  VictoryTheme,\n} from \"victory\";\nimport { Datum } from \"./utils\";\n\ninterface Props {\n  title: string;\n  pdfData: Datum[];\n  breaks: number[];\n  range?: number[];\n  className?: string;\n}\n\nconst Viz = ({ className, breaks, pdfData, title, range }: Props) => {\n  const maxY = Math.max(...pdfData.map((d) => d.y)) + 0.001;\n\n  return (\n    <div className={className}>\n      <VictoryChart\n        theme={VictoryTheme.material}\n        padding={{ top: 20, bottom: 30 }}\n      >\n        <VictoryLabel x={0} y={10} text={title} />\n        <VictoryAxis style={{grid: {stroke: 'none'}}} />\n        <VictoryLine data={pdfData} style={{ data: { stroke: \"#009688\" } }} />\n        {breaks.map((b) => (\n          <VictoryLine\n            key={b}\n            data={verticalLineData(b, 0, maxY)}\n            style={{ data: { stroke: \"#f44336\", opacity: 0.8 } }}\n          />\n        ))}\n        {range?.map((r) => (\n          <VictoryLine key={r} data={verticalLineData(r, 0, maxY)} />\n        ))}\n      </VictoryChart>\n    </div>\n  );\n};\n\nconst verticalLineData = (x: number, minY: number, maxY: number): Datum[] => {\n  return [\n    { x, y: minY },\n    { x, y: maxY },\n  ];\n};\n\nexport default Viz;\n","import React from \"react\";\nimport \"./App.css\";\nimport Viz from \"./Viz\";\nimport {Datum, pdf} from \"./utils\";\n\n\n\nconst pdfData = pdf(10000, 50, 8)\n\nconst data: { title: string; pdfData: Datum[]; breaks: number[] }[] = [\n  {\n    title: \"Equal (5) Intervals\",\n    pdfData,\n    breaks: [35.6, 45.2, 54.8, 64.4],\n  },\n  {\n    title: \"Equal (9) Intervals\",\n    pdfData,\n    breaks: [31.33, 36.67, 42, 47.33, 52.67, 58, 63.33, 68.67],\n  },\n  {\n    title: \"Equal (7) Intervals\",\n    pdfData,\n    breaks: [32.86, 39.71, 46.57, 53.43, 60.29, 67.14],\n  },\n  {\n    title: \"Unequal (7) Intervals Monotonic (r = 1.2)\",\n    pdfData,\n    breaks: [29.72, 34.18, 39.53, 45.95, 53.66, 62.90],\n  },\n  {\n    title: \"Unequal (7) Intervals Monotonic (r = 1.5)\",\n    pdfData,\n    breaks: [27.49, 29.73, 33.09, 38.12, 45.68, 57.01],\n  },\n  {\n    title: \"Unequal (7) Intervals Symmetric (fat tail r = 1.2)\",\n    pdfData,\n    breaks: [35.96, 42.40, 47.76, 52.24, 57.60, 64.04],\n  },\n  {\n    title: \"Unequal (7) Intervals Symmetric (thin tail r = 1.2)\",\n    pdfData,\n    breaks: [30.47, 35.84, 42.27, 57.73, 64.16, 69.53],\n  },\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {data.map(d => (<Viz key={d.title} range={[26,74]} className={\"Viz\"} {...d} />))}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}